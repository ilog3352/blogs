import{_ as a,c as l,o as i,ag as s}from"./chunks/framework.DuJzXpJq.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"node/nodejs/api/内置模块.md","filePath":"node/nodejs/api/内置模块.md","lastUpdated":1742196467000}'),r={name:"node/nodejs/api/内置模块.md"};function o(t,e,c,n,p,h){return i(),l("div",null,e[0]||(e[0]=[s('<h2 id="path" tabindex="-1">path <a class="header-anchor" href="#path" aria-label="Permalink to &quot;path&quot;">​</a></h2><ol><li>path.basename() 返回给定路径的最后一部分</li><li>path.dirname() 返回给定路径的目录部分</li><li>path.extname() 返回文件扩展名 带.</li><li>path.join() 拼接路径</li><li>path.resolve() 拼接路径</li><li>path.parse() 解析路径 将路径转为对象</li><li>path.format() 格式化路径 将对象转为路径</li><li>path.sep 路径分隔符 解决分隔符问题</li></ol><h2 id="os" tabindex="-1">os <a class="header-anchor" href="#os" aria-label="Permalink to &quot;os&quot;">​</a></h2><ol><li>os.platform() 获取操作系统平台 win32 window</li><li>os.release() 获取操作系统版本 win11 打印11</li><li>os.type() 获取操作系统类型</li><li>os.version() 获取操作系统版本</li></ol><h2 id="process" tabindex="-1">process <a class="header-anchor" href="#process" aria-label="Permalink to &quot;process&quot;">​</a></h2><ol><li>process.argv 获取命令行参数</li><li>process.cwd() 获取当前工作目录</li><li>process.exit() 退出</li><li>process.env 获取操作系统环境变量 可以修改 在进程里生效 退出恢复</li><li>process.memoryUsage() 获取内存使用情况</li></ol><h2 id="child-process" tabindex="-1">child_process <a class="header-anchor" href="#child-process" aria-label="Permalink to &quot;child_process&quot;">​</a></h2><ol><li>child_process.exec() 异步方法，回调函数 返回buffer 执行shell命令 可以打开软件</li><li>child_process.execSync() 同步方法 直接返回buffer 执行小命令</li><li>child_process.spawn() 返回的流 执行shell命令 第二个参数是数组 跟参数 -v 有回调函数</li><li>child_process.execFile() 执行可执行文件</li><li>fork() 创建子进程</li></ol><h2 id="fs" tabindex="-1">fs <a class="header-anchor" href="#fs" aria-label="Permalink to &quot;fs&quot;">​</a></h2><ol><li>fs.readFile() 读取文件 异步 同步 promise</li><li>fs.createReadStream() 读取文件流 处理大文件 一段一段返回</li><li>fs.mkdir(&#39;./aaa/a&#39;,{recursive:true}) 创建文件夹 创建多层文件夹</li><li>fs.rmSync(&#39;./aaa/a&#39;,{recursive:true}) 删除文件</li><li>fs.renameSync(&#39;./aaa/a&#39;,&#39;./aaa/b&#39;) 重命名</li><li>fs.watch(&#39;./aaa.txt&#39;,(event,filename)=&gt;{}) 监听文件</li><li>fs.writeFileSync(&#39;./aaa.txt&#39;,&#39;hello&#39;,{flag:&#39;a&#39;}) 写入文件 追加api: appendFileSync</li><li>fs.createWriteStream() 写入文件流</li><li>fs.linkSync 硬链接 10 fs.symlinkSync 软链接 快捷方式</li></ol>',10)]))}const _=a(r,[["render",o]]);export{f as __pageData,_ as default};
